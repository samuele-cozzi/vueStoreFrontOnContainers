/*
 * Akeneo PIM API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace Catalog.Nosql.Model.Akeneo
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode : IEquatable<Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode>
    { 
        /// <summary>
        /// Channel code of the reference entity record value
        /// </summary>
        /// <value>Channel code of the reference entity record value</value>
        [DataMember(Name="channel")]
        public string Channel { get; set; }

        /// <summary>
        /// Locale code of the reference entity record value
        /// </summary>
        /// <value>Locale code of the reference entity record value</value>
        [DataMember(Name="locale")]
        public string Locale { get; set; }

        /// <summary>
        /// Reference entity record value
        /// </summary>
        /// <value>Reference entity record value</value>
        [DataMember(Name="data")]
        public Object Data { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode {\n");
            sb.Append("  Channel: ").Append(Channel).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode)obj);
        }

        /// <summary>
        /// Returns true if Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode instances are equal
        /// </summary>
        /// <param name="other">Instance of Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Channel == other.Channel ||
                    Channel != null &&
                    Channel.Equals(other.Channel)
                ) && 
                (
                    Locale == other.Locale ||
                    Locale != null &&
                    Locale.Equals(other.Locale)
                ) && 
                (
                    Data == other.Data ||
                    Data != null &&
                    Data.Equals(other.Data)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Channel != null)
                    hashCode = hashCode * 59 + Channel.GetHashCode();
                    if (Locale != null)
                    hashCode = hashCode * 59 + Locale.GetHashCode();
                    if (Data != null)
                    hashCode = hashCode * 59 + Data.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode left, Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode left, Apirestv1referenceentitiesreferenceEntityCoderecordsValuesAttributeCode right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
